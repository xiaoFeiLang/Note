//
//  jiagou.m
//  Note
//
//  Created by Loulou on 16/7/26.
//
//

#import <Foundation/Foundation.h>
调用网络API
页面展示
数据的本地持久化
动态部署方案

如何让业务开发工程师方便安全地调用网络API？然后尽可能保证用户在各种网络环境下都能有良好的体验？
页面如何组织，才能尽可能降低业务方代码的耦合度？尽可能降低业务方开发界面的复杂度，提高他们的效率？
当数据有在本地存取的需求的时候，如何能够保证数据在本地的合理安排？如何尽可能地减小性能消耗？
iOS应用有审核周期，如何能够通过不发版本的方式展示新的内容给用户？如何修复紧急bug？

收集用户数据，给产品和运营提供参考
合理地组织各业务方开发的业务模块，以及相关基础模块
每日app的自动打包，提供给QA工程师的测试工具

网络层设计方案？设计网络层时要考虑哪些问题？对网络层做优化的时候，可以从哪些地方入手？
页面的展示、调用和组织都有哪些设计方案？我们做这些方案的时候都要考虑哪些问题？
本地持久化层的设计方案都有哪些？优劣势都是什么？不同方案间要注意的问题分别都是什么？
要实现动态部署，都有哪些方案？不同方案之间的优劣点，他们的侧重点？